apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "com.star-zero.gradle.githook"
try {
    apply from: "${System.env.SIGNING_CONFIG_PATH}"
} catch (ex) {
    println "Signing config is not present"
}

githook {
    hooksDir = file(new File(rootDir, ".git/hooks"))
    hooks {
        "pre-push" {
            task = "ktlintCheck"
        }
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.pratclot.tunetracker"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 2
        versionName "1.0"

        testInstrumentationRunner "com.pratclot.tunetracker.TestRunner"
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues false
            includeAndroidResources true
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            try {
                signingConfig signingConfigs.release
            } catch (ex) {
                println "Could not apply signing config to release build"
            }
        }
    }

    dataBinding {
        enabled = true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation "junit:junit:${versions.junit}"
    debugImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"

    implementation "com.jakewharton.timber:timber:${versions.timber}"

    implementation "androidx.room:room-runtime:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle_extensions}"

    implementation "com.google.android.material:material:${versions.material}"


    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlin_coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlin_coroutines}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${versions.retrofit_coroutines_adapter}"

    implementation "com.github.barteksc:android-pdf-viewer:${versions.pdf_viewer}"


    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kaptAndroidTest "com.google.dagger:dagger-compiler:${versions.dagger}"

    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:${versions.assistedInject}"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:${versions.assistedInject}"


    testImplementation "org.hamcrest:hamcrest-all:${versions.hamcrest}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.kotlin_coroutines}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.kotlin_coroutines}"

    testImplementation "androidx.test:runner:1.2.0"
    testImplementation "androidx.test.ext:junit-ktx:${versions.androidXTestExtKotlinRunner}"
    debugImplementation "androidx.test:core-ktx:${versions.androidXTestCore}"
    testImplementation("org.robolectric:robolectric:${versions.robolectric}") {
        // https://github.com/robolectric/robolectric/issues/5245
        exclude group: 'com.google.auto.service', module: 'auto-service'
    }

    testImplementation "com.squareup.okhttp3:mockwebserver:${versions.mockwebserver}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${versions.mockwebserver}"

    // Testing code should not be included in the main code.
    // Once https://issuetracker.google.com/128612536 is fixed this can be fixed.

    implementation "androidx.fragment:fragment-testing:${versions.fragment}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${versions.espresso}"
    androidTestImplementation "org.mockito:mockito-android:${versions.mockito}"

    androidTestImplementation "androidx.navigation:navigation-testing:2.3.0-alpha06"


}
